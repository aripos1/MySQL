use hr_db;
/*
혼합 SQL 문제입니다.

문제1.
담당 매니저가 배정되어있으나 커미션비율이 없고, 월급이 3000초과인 직원의
이름, 매니저아이디, 커미션 비율, 월급 을 출력하세요.
(45건)

문제2.
각 부서별로 최고의 월급을 받는 사원의 직원번호(employee_id), 이름(first_name), 월급
(salary), 입사일(hire_date), 전화번호(phone_number), 부서번호(department_id) 를 조회하
세요
-조건절비교 방법으로 작성하세요
-월급의 내림차순으로 정렬하세요
-입사일은 2001-01-13 토요일 형식으로 출력합니다.
-전화번호는 515-123-4567 형식으로 출력합니다.
(11건)

문제3
매니저별 담당직원들의 평균월급 최소월급 최대월급을 알아보려고 한다.
-통계대상(직원)은 2005년 이후(2005년 1월 1일 ~ 현재)의 입사자 입니다.
-매니저별 평균월급이 5000이상만 출력합니다.
-매니저별 평균월급의 내림차순으로 출력합니다.
-매니저별 평균월급은 소수점 첫째자리에서 반올림 합니다.
-출력내용은 매니저아이디, 매니저이름(first_name), 매니저별평균월급, 매니저별최소월급, 매
니저별최대월급 입니다.
(9건)
*/

select em.manager_id
		,emp.first_name
        ,min(em.salary)
	    ,max(em.salary)
        ,round(avg(em.salary),1)
from employees em 
	 ,employees emp 
                         
where em.manager_id = emp.employee_id
and em.hire_date > 20050101

group by em.manager_id,emp.first_name
having avg(em.salary) >=5000 
order by avg(em.salary) desc
;


/*
문제4.
각 사원(employee)에 대해서 사번(employee_id), 이름(first_name),
부서명(department_name), 매니저(manager)의 이름(first_name)을 조회하세요.
부서가 없는 직원(Kimberely)은 표시 합니다.
매니저가 없는 직원(Steven) 은 출력하지 않습니다.
(106명)
*/
select em.employee_id
		,em.first_name
        ,de.department_name
        ,mg.first_name
from employees em 
left join departments de
on em.department_id = de.department_id 
inner join employees mg 
where  em.manager_id = mg.employee_id
order by em.employee_id asc
;

/*
문제5.
2005년 이후 입사한 직원중에 입사일이 11번째에서 20번째의 직원의
사번, 이름, 부서명, 월급, 입사일을 입사일 순서로 출력하세요
*/

select employee_id
		,first_name
        ,department_name
        ,salary
        ,hire_date

from employees em, departments de
where em.department_id = de.department_id
and hire_date >=20050101
order by hire_date asc
limit 10, 10
;


/*
문제6.
가장 늦게 입사한 직원의 이름(first_name last_name)과 월급(salary)과 근무하는 부서 이름
(department_name)은?
*/

select  em.first_name
		,em.salary
        ,de.department_name

from employees em, departments de
where em.department_id = de.department_id
and hire_date = (select max(hire_date)
				from employees)
;

/*
문제7.
평균월급(salary)이 가장 높은 부서 직원들의 직원번호(employee_id), 이름(firt_name), 성
(last_name)과 업무(job_title), 월급(salary)을 조회하시오.
*/

select em.employee_id
		,em.first_name
        ,em.last_name
        ,jo.job_title
        ,salary
        ,department_name
from employees em, jobs jo, departments de, (select department_id, avg(salary) ag
									from employees
                                    group by department_id)ags
where em.job_id = jo.job_id
and ags.department_id = de.department_id
and de.department_id = em.department_id
and ags.ag = (select max(ags.ag)
			  from  (select department_id, avg(salary) ag
									from employees
                                    group by department_id)ags)
                                  
;


/*
문제8.
평균 월급(salary)이 가장 높은 부서명과 월급은? (limt사용하지 말고 그룹함수 사용할 것)
*/
select department_name
		,ags.ag
		
from departments de, (select department_id, avg(salary) ag
									from employees
                                    group by department_id)ags
where  ags.department_id = de.department_id
and ags.ag = ( select max(ag)
				  from (select department_id, avg(salary) ag
						  from employees
                          group by department_id)ags)
;

/*
문제9.
평균 월급(salary)이 가장 높은 지역과 평균월급은?( limt사용하지 말고 그룹함수 사용할 것)
*/
select re.region_name
		,res.ag
from regions re, (select region_id, avg(salary) ag
				  from employees em, departments de, locations lo, countries co
                  where co.country_id =lo.country_id
                  and lo.location_id = de.location_id
                  and de.department_id =em.department_id
				  group by region_id)res
where res.region_id = re.region_id
and res.ag = (select max(ag)
			  from (select region_id, avg(salary) ag
					from employees em, departments de, locations lo, countries co
					where co.country_id =lo.country_id
					and lo.location_id = de.location_id
					and de.department_id =em.department_id
					group by region_id)res)
          
;

/*
문제10.
평균 월급(salary)이 가장 높은 업무와 평균월급은? (limt사용하지 말고 그룹함수 사용할 것)
*/

select jo.job_title
		,jos.ag
        
from jobs jo, (select job_id, avg(salary) ag
							 from employees
                             group by job_id)jos

where jos.job_id = jo.job_id
and jos.ag = (select max(ag)
			    from (select job_id, avg(salary) ag
					  from employees
                       group by job_id)jos)
;
